{"version":3,"sources":["components/Clock/Clock.module.css","redux/appReducer.js","components/Clock/Clock.js","utils/timerUtils.js","components/DeleteButton/DeleteButton.js","components/Logs/Logs.js","components/Chart/Chart.js","components/Info/Info.js","components/Tabs/Tabs.js","utils/debounce.js","hooks/useDebounced.js","components/TaskNameInput/TaskNameInput.js","components/Dialog/Dialog.js","utils/generateTasks.js","App.js","redux/store.js","index.js"],"names":["module","exports","initialState","startTime","taskName","tasks","Clock","timer","milliseconds","parseInt","seconds","minutes","hours","msToHMS","time","className","style","Transition","React","forwardRef","props","ref","Slide","direction","DeleteButton","task","children","useState","open","setOpen","dispatch","useDispatch","history","useHistory","handleClose","Button","onClick","color","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogContent","id","DialogActions","type","deleteTask","push","Logs","useSelector","state","TableContainer","width","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","i","key","component","scope","Date","toLocaleTimeString","endTime","ms","to","TasksChart","data","res","Array","keys","forEach","startHour","getHours","startMinutes","getMinutes","endHour","endMinutes","currentHour","hour","generateData","height","padding","margin","top","right","left","bottom","strokeDasharray","dataKey","value","offset","position","label","angle","barSize","fill","Info","useRouteMatch","params","Paper","AppBar","Toolbar","textDecoration","IconButton","edge","marginTop","Tabs","path","useLocation","pathname","tabsValue","setTabsValue","onChange","event","newValue","variant","Tab","debounce","f","timeout","args","clearTimeout","setTimeout","apply","useDebounced","callback","delay","useCallback","TaskNameInput","setValue","debouncedDispatch","nextValue","setTaskName","useEffect","Input","e","target","placeholder","Dialog","setVisible","fullWidth","maxWidth","DialogTitle","DialogContentText","getRandom","min","max","Math","floor","random","generateTasks","startPoints","generateStartPoints","numberOfStartPoints","length","sort","prev","next","filter","t","arr","endPoints","sp","maxLength","todayDate","toDateString","getTime","App","setTimer","alertIsVisible","setAlertIsVisible","timerId","setInterval","now","createTimer","exact","paddingBottom","clearInterval","newTask","display","flexDirection","alignItems","justifyContent","newTasks","setTasks","Chart","localStorage","window","store","createStore","action","getItem","JSON","parse","reHydrateStore","applyMiddleware","getState","result","setItem","stringify","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.e8e45067.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Clock\":\"Clock_Clock__3dHhC\"};","const SET_TASKS = 'SET-TASKS'\nconst SET_TASK_NAME = 'SET-TASK-NAME'\nconst START_TIMER = 'START_TIMER'\nconst STOP_TIMER = 'STOP_TIMER'\nconst DELETE_TASK = 'DELETE_TASK'\n\nconst initialState = {\n  startTime: null,\n  taskName: null,\n  tasks: [],\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_TASKS: {\n      return {\n        ...state,\n        tasks: action.tasks,\n      }\n    }\n    case SET_TASK_NAME: {\n      return {\n        ...state,\n        taskName: action.taskName,\n      }\n    }\n\n    case START_TIMER: {\n      return {\n        ...state,\n        startTime: action.startTime,\n      }\n    }\n\n    case STOP_TIMER: {\n      return {\n        ...state,\n        startTime: null,\n        taskName: '',\n        tasks: [...state.tasks, action.newTask],\n      }\n    }\n\n    case DELETE_TASK: {\n      return {\n        ...state,\n        startTime: null,\n        taskName: '',\n        tasks: state.tasks.filter((t) => t.startTime !== action.startTime),\n      }\n    }\n\n    default: {\n      return { ...state }\n    }\n  }\n}\n\nexport const setTasks = (tasks) => ({ type: SET_TASKS, tasks })\n\nexport const setTaskName = (taskName) => ({ type: SET_TASK_NAME, taskName })\n\nexport const startTimer = () => ({ type: START_TIMER, startTime: Date.now() })\n\nexport const stopTimer = (newTask) => ({ type: STOP_TIMER, newTask })\n\nexport const deleteTask = (task) => ({\n  type: DELETE_TASK,\n  startTime: task.startTime,\n})\n","import React from 'react';\nimport style from './Clock.module.css';\n\nimport { msToHMS } from '../../utils/timerUtils';\n\nconst Clock = ({ time }) => {\n  let { hours, minutes, seconds } = msToHMS(time);\n\n  return (\n    <div className={style.Clock}>\n      <span>\n        {hours}:{minutes}:{seconds}\n      </span>\n    </div>\n  );\n};\n\nexport default Clock;\n","export const createTimer = (startTime = null, timerId, setTimer) => {\n  if (startTime && !timerId) {\n    const timerId = setInterval(() => {\n      const time = Date.now() - startTime\n      setTimer((prev) => ({ ...prev, time }))\n    })\n    setTimer((prev) => ({ ...prev, id: timerId }))\n  }\n}\n\nexport const msToHMS = (timer = 0) => {\n  let milliseconds = parseInt((timer % 1000) / 100),\n    seconds = parseInt((timer / 1000) % 60),\n    minutes = parseInt((timer / (1000 * 60)) % 60),\n    hours = parseInt((timer / (1000 * 60 * 60)) % 24)\n\n  hours = hours < 10 ? `0${hours}` : hours\n  minutes = minutes < 10 ? `0${minutes}` : minutes\n  seconds = seconds < 10 ? `0${seconds}` : seconds\n\n  return { hours, minutes, seconds, milliseconds }\n}\n","import React, { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteTask } from '../../redux/appReducer';\n\nimport { Button, Dialog, Slide, DialogActions, DialogContent } from '@material-ui/core';\n\nimport { useHistory } from 'react-router-dom';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst DeleteButton = ({ task, children }) => {\n  const [open, setOpen] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const handleDeleteButton = () => {\n    dispatch(deleteTask(task));\n    setOpen(false);\n    history.push('/');\n  };\n\n  const handleClose = () => setOpen(false);\n\n  const handleOpenDialog = () => setOpen(true);\n\n  return (\n    <>\n      <Button onClick={handleOpenDialog} color=\"secondary\">\n        {children}\n      </Button>\n\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogContent id=\"alert-dialog-slide-title\">\n          Do you really want to delete <b>{task.taskName}</b>?\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleDeleteButton} color=\"secondary\">\n            DELETE\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default DeleteButton;\n","import React from 'react'\n\n// material-ui\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\n\n// react-router\nimport { Link } from 'react-router-dom'\n\n// redux\nimport { useSelector } from 'react-redux'\n\n// components\nimport DeleteButton from '../DeleteButton/DeleteButton'\n\nfunction msToHMS(ms) {\n  var seconds = parseInt(ms / 1000)\n  var hours = parseInt(seconds / 3600)\n  seconds = seconds % 3600\n  var minutes = parseInt(seconds / 60)\n  seconds = seconds % 60\n  return (\n    (hours < 10 ? `0${hours}` : hours) +\n    ':' +\n    (minutes < 10 ? `0${minutes}` : minutes) +\n    ':' +\n    (seconds < 10 ? `0${seconds}` : seconds)\n  )\n}\n\nconst Logs = () => {\n  const tasks = useSelector((state) => state.tasks)\n\n  return (\n    <TableContainer style={{ width: '100%' }}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>№</TableCell>\n            <TableCell align=\"right\">Task</TableCell>\n            <TableCell align=\"right\">Time start</TableCell>\n            <TableCell align=\"right\">Time end</TableCell>\n            <TableCell align=\"right\">Time spent</TableCell>\n            <TableCell align=\"right\">Info</TableCell>\n            <TableCell align=\"right\">Delete</TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {tasks &&\n            tasks.map((row, i) => (\n              <TableRow key={row.startTime}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {i + 1}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.taskName}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {new Date(row.startTime).toLocaleTimeString()}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {new Date(row.endTime).toLocaleTimeString()}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {msToHMS(row.endTime - row.startTime)}\n                </TableCell>\n                <TableCell align=\"right\">\n                  <Link to={`/tasks/${i + 1}`}>\n                    <Button color=\"primary\">INFO</Button>\n                  </Link>\n                </TableCell>\n                <TableCell align=\"right\">\n                  <DeleteButton task={row}>DELETE</DeleteButton>\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default Logs\n","import * as React from 'react'\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  LabelList,\n  Label,\n  CartesianGrid,\n} from 'recharts'\n\nexport const generateData = (data) => {\n  const res = [...new Array(24).keys()].map(() => 0)\n\n  data.forEach(({ startTime, endTime }) => {\n    const startHour = new Date(startTime).getHours()\n    const startMinutes = new Date(startTime).getMinutes()\n\n    const endHour = new Date(endTime).getHours()\n    const endMinutes = new Date(endTime).getMinutes()\n\n    if (startHour === endHour) {\n      res[startHour] += endMinutes - startMinutes\n    }\n\n    if (endHour > startHour) {\n      let currentHour = startHour\n      res[currentHour] += 60 - startMinutes\n      currentHour += 1\n      while (currentHour !== endHour) {\n        res[currentHour] = 60\n        currentHour += 1\n      }\n      res[currentHour] += endMinutes\n    }\n  })\n\n  return res.map((minutes, hour) => ({ hour: hour, minutes: minutes }))\n}\n\nconst TasksChart = ({ tasks }) => {\n  const data = generateData(tasks)\n\n  return (\n    <div style={{ width: '100%', height: '55vh', padding: 8 }}>\n      <ResponsiveContainer>\n        <BarChart\n          margin={{ top: 20, right: 30, left: 0, bottom: 0 }}\n          data={data}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"hour\">\n            <Label value=\"Hours\" offset={0} position=\"insideBottom\" />\n          </XAxis>\n          <YAxis\n            label={{\n              value: 'Minutes in hours',\n              angle: -90,\n              position: 'insideLeft',\n            }}\n          />\n\n          <Bar dataKey=\"minutes\" barSize={10} fill=\"#8884d8\">\n            <LabelList dataKey=\"minutes\" position=\"top\" />\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}\n\nexport default TasksChart\n","import React from 'react';\n\nimport { useRouteMatch, Link } from 'react-router-dom';\n\nimport { useSelector } from 'react-redux';\n\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\nimport { Paper, Toolbar, IconButton, AppBar } from '@material-ui/core';\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst Info = () => {\n  const tasks = useSelector((state) => state.tasks);\n\n  let {\n    params: { id },\n  } = useRouteMatch();\n  let { taskName, startTime, endTime } = tasks[id - 1] ? tasks[id - 1] : {};\n  return (\n    <Paper open={true}>\n      <AppBar>\n        <Toolbar>\n          <Link to=\"/\" style={{ textDecoration: 'none' }}>\n            <IconButton edge=\"start\" color=\"default\" aria-label=\"close\">\n              <ArrowBackIcon style={{ color: 'white' }} />\n            </IconButton>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <div style={{ marginTop: 48, padding: 16 }}>\n        {tasks[id - 1] && (\n          <div>\n            <p>Name: {taskName}</p>\n            <p>Start Time: {new Date(startTime).toLocaleTimeString()}</p>\n            <p>End Time: {new Date(endTime).toLocaleTimeString()}</p>\n            <DeleteButton task={tasks[id - 1]}>DELETE</DeleteButton>\n          </div>\n        )}\n        {!tasks[id - 1] && <div>Error! No such task #{id}!</div>}\n      </div>\n    </Paper>\n  );\n};\n\nexport default Info;\n","import React, { useState } from 'react'\n\n// materual-ui\nimport MaterialUITabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport AppBar from '@material-ui/core/AppBar'\n\n// react-router\nimport { useHistory, useLocation } from 'react-router-dom'\n\nconst Tabs = () => {\n  const { pathname: path } = useLocation()\n\n  const [tabsValue, setTabsValue] = useState(path === '/chart' ? 1 : 0)\n\n  const history = useHistory()\n\n  const handleTabsChange = (event, newValue) => {\n    const routerValues = ['', '/chart']\n    history.push(routerValues[newValue])\n    setTabsValue(newValue)\n  }\n\n  return (\n    <AppBar position=\"static\" color=\"primary\">\n      <MaterialUITabs\n        value={tabsValue}\n        onChange={handleTabsChange}\n        aria-label=\"disabled tabs example\"\n        variant=\"fullWidth\"\n      >\n        <Tab label=\"TASKS LOG\" />\n        <Tab label=\"TASKS CHART\" />\n      </MaterialUITabs>\n    </AppBar>\n  )\n}\n\nexport default Tabs\n","const debounce = (f, ms) => {\n  let timeout;\n  return (...args) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => f.apply(this, args), ms);\n  };\n};\n\nexport default debounce;\n","import { useCallback } from 'react';\n\nimport debounce from '../utils/debounce';\n\nconst useDebounced = (callback, delay) => {\n  const debouncedCallback = useCallback(debounce(callback, delay), []);\n\n  return debouncedCallback;\n};\n\nexport default useDebounced;\n","import React, { useState, useEffect } from 'react';\n\nimport { Input } from '@material-ui/core';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setTaskName } from '../../redux/appReducer';\n\nimport useDebounced from '../../hooks/useDebounced';\n\nconst TaskNameInput = () => {\n  const taskName = useSelector((state) => state.taskName);\n  const dispatch = useDispatch();\n\n  const [value, setValue] = useState(taskName);\n\n  const debouncedDispatch = useDebounced((nextValue) => dispatch(setTaskName(nextValue)), 400);\n\n  useEffect(() => {\n    setValue(taskName);\n  }, [taskName]);\n\n  const handleInputChange = (e) => {\n    const nextValue = e.target.value;\n    setValue(nextValue);\n    debouncedDispatch(nextValue);\n  };\n  return <Input value={value} onChange={handleInputChange} placeholder=\"Name of your task\" />;\n};\n\nexport default TaskNameInput;\n","import React from 'react'\n\nimport {\n  Dialog as MaterialUIDialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  Button,\n  DialogActions,\n} from '@material-ui/core'\n\nconst Dialog = ({ open, setVisible }) => {\n  const handleClose = () => setVisible(false)\n\n  return (\n    <MaterialUIDialog\n      fullWidth={true}\n      maxWidth=\"xs\"\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"max-width-dialog-title\"\n    >\n      <DialogTitle id=\"max-width-dialog-title\">Input is empty!</DialogTitle>\n      <DialogContent>\n        <DialogContentText>Enter the name of task first</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          OK\n        </Button>\n      </DialogActions>\n    </MaterialUIDialog>\n  )\n}\n\nexport default Dialog\n","const getRandom = (min, max) => Math.floor(Math.random() * (max - min)) + min\n\nconst generateTasks = () => {\n  const generateStartPoints = (\n    numberOfStartPoints = getRandom(10, 15),\n    startPoints = []\n  ) => {\n    if (startPoints.length === numberOfStartPoints) return startPoints\n\n    startPoints.push(Math.random() * 1440)\n    startPoints.sort((prev, next) => (next > prev ? -1 : 1))\n    startPoints = startPoints.filter((t, i, arr) => {\n      if (i === 0) return true\n      if (t - arr[i - 1] < 10) return false\n      if (i === arr.length - 1 && 1440 - t < 10) return false\n      return true\n    })\n\n    return generateStartPoints(numberOfStartPoints, startPoints)\n  }\n\n  const startPoints = generateStartPoints()\n\n  const endPoints = startPoints.map((sp, i) => {\n    let maxLength\n    if (i < startPoints.length - 1)\n      maxLength = startPoints[i + 1] - sp < 90 ? startPoints[i + 1] - sp : 90\n    else maxLength = maxLength = 90\n    return sp + getRandom(10, maxLength)\n  })\n\n  const todayDate = new Date(new Date().toDateString()).getTime()\n\n  const tasks = startPoints.map((sp, i) => ({\n    taskName: `Task ${i + 1}`,\n    startTime: todayDate + sp * 60000,\n    endTime: todayDate + endPoints[i] * 60000,\n  }))\n\n  return tasks\n}\n\nexport default generateTasks\n","import React, { useState } from 'react';\nimport './App.css';\n\n// redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport { startTimer, stopTimer, setTasks } from './redux/appReducer';\n\n// material-ui\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\n// react-router\nimport { Route } from 'react-router-dom';\n\n// components\nimport Clock from './components/Clock/Clock';\nimport Logs from './components/Logs/Logs';\nimport Chart from './components/Chart/Chart';\nimport Info from './components/Info/Info';\nimport Tabs from './components/Tabs/Tabs';\nimport TaskNameInput from './components/TaskNameInput/TaskNameInput';\nimport Dialog from './components/Dialog/Dialog';\n\n// utils\nimport generateTasks from './utils/generateTasks';\nimport { createTimer } from './utils/timerUtils';\n\nconst App = () => {\n  const [timer, setTimer] = useState({ id: null, time: null });\n  const [alertIsVisible, setAlertIsVisible] = useState(false);\n\n  const { startTime, tasks, taskName } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  createTimer(startTime, timer.id, setTimer);\n\n  const onStartButtonPress = () => {\n    dispatch(startTimer());\n  };\n\n  const onStopButtonPress = () => {\n    if (!taskName) {\n      setAlertIsVisible(true);\n      return;\n    }\n\n    const task = {\n      taskName,\n      startTime,\n      endTime: Date.now(),\n    };\n\n    clearInterval(timer.id);\n\n    setTimer({});\n\n    dispatch(stopTimer(task));\n  };\n\n  const onGenerateButtonPress = () => {\n    const newTasks = generateTasks();\n    dispatch(setTasks(newTasks));\n  };\n\n  return (\n    <div className=\"App\">\n      <Route path={['/', '/chart']} exact>\n        <TaskNameInput />\n\n        <Clock time={timer.time} />\n\n        <div style={{ paddingBottom: 12 }}>\n          {!startTime && (\n            <Button variant=\"contained\" color=\"primary\" onClick={onStartButtonPress}>\n              START\n            </Button>\n          )}\n          {startTime && (\n            <Button variant=\"contained\" color=\"secondary\" onClick={onStopButtonPress}>\n              STOP\n            </Button>\n          )}\n        </div>\n      </Route>\n\n      <Dialog open={alertIsVisible} setVisible={setAlertIsVisible} />\n\n      <Paper style={{ margin: 16 }}>\n        <Route path=\"/\" exact>\n          <Tabs />\n\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'flex-end',\n              justifyContent: 'flex-end',\n            }}\n          >\n            <Logs />\n\n            <Button style={{ margin: 16 }} variant=\"outlined\" onClick={onGenerateButtonPress}>\n              GENERATE\n            </Button>\n          </div>\n        </Route>\n\n        <Route path=\"/chart\" exact>\n          <Tabs />\n          <Chart tasks={tasks} />\n        </Route>\n\n        <Route path=\"/tasks/:id\">\n          <Info />\n        </Route>\n      </Paper>\n    </div>\n  );\n};\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\n\nimport reducer from './appReducer';\n\nconst localStorage = window.localStorage;\n\nconst localStorageMiddleware = ({ getState }) => {\n  return (next) => (action) => {\n    const result = next(action);\n    localStorage.setItem('applicationState', JSON.stringify(getState()));\n    return result;\n  };\n};\n\nconst reHydrateStore = () => {\n  if (localStorage.getItem('applicationState') !== null) {\n    return JSON.parse(localStorage.getItem('applicationState'));\n  }\n};\n\nconst store = createStore(reducer, reHydrateStore(), applyMiddleware(localStorageMiddleware));\n\nexport default store;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename={'/task-timer'}>\n      <App />\n    </Router>\n  </Provider>,\n\n  document.getElementById('root')\n)\n"],"sourceRoot":""}