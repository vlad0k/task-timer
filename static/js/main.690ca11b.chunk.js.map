{"version":3,"sources":["components/Clock/Clock.module.css","redux/reducers.js","components/Clock/Clock.js","components/Logs/Logs.js","components/Chart/Chart.js","components/Info/Info.js","App.js","redux/store.js","index.js"],"names":["module","exports","initialState","startTime","time","taskName","taskInterval","setStartTime","type","setTasks","tasks","setTaskName","Clock","timer","duration","milliseconds","parseInt","seconds","minutes","hours","formatTimer","className","style","Logs","deleteTask","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","i","key","scope","Date","toLocaleTimeString","endTime","ms","msToHMS","to","Button","onClick","TasksChart","data","today","toDateString","filter","res","forEach","startHour","getHours","startMinutes","getMinutes","maxForHour","hour","Math","ceil","generateData","width","height","padding","margin","top","right","left","bottom","strokeDasharray","dataKey","value","offset","position","label","angle","barSize","fill","Info","console","log","id","useRouteMatch","params","Dialog","fullScreen","open","AppBar","Toolbar","IconButton","edge","color","marginTop","App","useState","setTimer","path","useLocation","pathname","tabsValue","setTabsValue","state","useSelector","dispatch","useDispatch","history","useHistory","timerId","setInterval","now","prev","task","newTasks","t","getRandom","min","max","floor","random","TextField","onChange","e","target","window","clearInterval","alert","Tabs","indicatorColor","textColor","event","newValue","push","variant","Tab","display","flexDirection","todayDate","getTime","quantity","generateTasks","Chart","localStorage","store","createStore","action","getItem","JSON","parse","reHydrateStore","applyMiddleware","getState","next","result","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,MAAQ,uB,mNCKpBC,EAAe,CACjBC,UAAW,KACXC,KAAM,CAAC,KAAK,KAAK,MACjBC,SAAU,GACVC,cAAc,GA4CLC,EAAe,SAACJ,GAAD,MAAgB,CAACK,KArDtB,iBAqD4CL,cAItDM,EAAW,SAACC,GAAD,MAAY,CAACF,KAvDnB,YAuDoCE,UAEzCC,EAAc,SAACN,GAAD,MAAe,CAACG,KAxDrB,gBAwD0CH,a,uECnCjDO,EATD,SAAC,GAAiB,IAAD,IAAfC,MAAe,EAbX,SAAAC,GAChB,IAAIC,EAAeC,SAAUF,EAAS,IAAM,KACtCG,EAAUD,SAAUF,EAAS,IAAM,IACnCI,EAAUF,SAAUF,EAAS,IAAW,IACxCK,EAAQH,SAAUF,EAAS,KAAc,IAM/C,MAAO,CAACK,MAJRA,EAASA,EAAQ,GAAT,WAAmBA,GAAUA,EAItBD,QAHfA,EAAWA,EAAU,GAAX,WAAqBA,GAAYA,EAGnBD,QAFxBA,EAAWA,EAAU,GAAX,WAAqBA,GAAYA,EAEVF,gBAIGK,MADT,MAAP,EAAO,GACnBD,EADmB,EACnBA,MAAOD,EADY,EACZA,QAASD,EADG,EACHA,QACxB,OACI,yBAAKI,UAAWC,IAAMV,OAClB,8BAAOO,EAAP,IAAeD,EAAf,IAAyBD,K,8DC4CtBM,EArDF,SAAC,GAA2B,IAAzBb,EAAwB,EAAxBA,MAAOc,EAAiB,EAAjBA,WAYnB,OACI,kBAACC,EAAA,EAAD,CAAgBC,UAAWC,KACvB,kBAACC,EAAA,EAAD,CAAOC,aAAW,gBACd,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,QACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,cACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,YACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,cACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,QACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,YAIR,kBAACC,EAAA,EAAD,KACKxB,GAASA,EAAMyB,KAAI,SAACC,EAAKC,GAAN,OAChB,kBAACN,EAAA,EAAD,CAAUO,IAAKF,EAAIjC,WACf,kBAAC6B,EAAA,EAAD,CAAWN,UAAU,KAAKa,MAAM,OAC3BF,EAAI,GAET,kBAACL,EAAA,EAAD,CAAWN,UAAU,KAAKa,MAAM,OAC3BH,EAAI/B,UAET,kBAAC2B,EAAA,EAAD,CAAWC,MAAM,SAAS,IAAIO,KAAKJ,EAAIjC,WAAWsC,sBAClD,kBAACT,EAAA,EAAD,CAAWC,MAAM,SAAS,IAAIO,KAAKJ,EAAIM,SAASD,sBAChD,kBAACT,EAAA,EAAD,CAAWC,MAAM,SApCzC,SAAkBU,GAEd,IAAI1B,EAAUD,SAAS2B,EAAK,KACxBxB,EAAQH,SAAUC,EAAU,MAChCA,GAAoB,KACpB,IAAIC,EAAUF,SAAUC,EAAU,IAElC,OADAA,GAAoB,IACZE,EAAQ,GAAR,WAAiBA,GAAUA,GAAO,KAAKD,EAAU,GAAV,WAAmBA,GAAYA,GAAS,KAAKD,EAAU,GAAV,WAAmBA,GAAYA,GA6B7E2B,CAAQR,EAAIM,QAAUN,EAAIjC,YACpD,kBAAC6B,EAAA,EAAD,CAAWC,MAAM,SACjB,kBAAC,IAAD,CAAMY,GAAE,iBAAYR,EAAI,IAAK,kBAACS,EAAA,EAAD,eAE7B,kBAACd,EAAA,EAAD,CAAWC,MAAM,SACb,kBAACa,EAAA,EAAD,CAAQC,QAAS,kBAAMvB,EAAWY,KAAlC,mB,QCyBjBY,EAvBI,SAAC,GAAe,IACzBC,EAvCW,SAACA,GAClB,IAAKA,EAAM,MAAO,GAElB,IAAMC,GAAS,IAAIV,MAAQW,aAE3BF,EAAOA,EAAKG,QAAO,gBAAEjD,EAAF,EAAEA,UAAF,OAAkB,IAAIqC,KAAKrC,GAAYgD,eAAiBD,KAG3E,IADA,IAAMG,EAAM,GACHhB,EAAI,EAAGA,EAAI,GAAIA,IAAKgB,EAAIhB,GAAK,EA2BtC,OAzBAY,EAAKK,SAAS,YASV,IATqC,IAAzBnD,EAAwB,EAAxBA,UAAWuC,EAAa,EAAbA,QAEnBa,EAAa,IAAIf,KAAKrC,GAAYqD,WAClCC,EAAgB,IAAIjB,KAAKrC,GAAYuD,aAErCxC,GAAWwB,EAAUvC,GAAa,IAEhCwD,EAAa,GAEVtB,EAAIkB,EAAWlB,EAAI,GAAIA,IACPsB,EAAWtB,GAA5BA,IAAMkB,EAA2B,GAAKE,EAAeJ,EAAIhB,GACxC,GAAKgB,EAAIhB,GAGlC,IAAK,IAAIA,EAAIkB,EAAWlB,EAAI,GAAIA,IACvBnB,GAAWyC,EAAWtB,IACvBgB,EAAIhB,IAAMsB,EAAWtB,GACrBnB,GAAWyC,EAAWtB,KAEtBgB,EAAIhB,IAAMnB,EACVA,EAAU,MAKfmC,EAAIlB,KAAI,SAACjB,EAAS0C,GAAV,MAAoB,CAACA,MAAOA,EAAM1C,QAAS2C,KAAKC,KAAK5C,OAIvD6C,CADiB,EAAZrD,OAElB,OACI,uBAAKY,MAAO,CAAC0C,MAAO,OAAQC,OAAQ,OAAQC,QAAS,IACjD,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAUC,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,KAAM,EAAGC,OAAQ,GAAKtB,KAAMA,GAChE,gBAAC,IAAD,CAAeuB,gBAAgB,QAC/B,gBAAC,IAAD,CAAOC,QAAQ,QACX,gBAAC,IAAD,CAAOC,MAAM,QAAQC,OAAQ,EAAGC,SAAS,kBAE7C,gBAAC,IAAD,CAAOC,MAAO,CAAEH,MAAO,mBAAoBI,OAAQ,GAAIF,SAAU,gBAEjE,gBAAC,IAAD,CAAKH,QAAQ,UAAUM,QAAS,GAAIC,KAAK,WACrC,gBAAC,IAAD,CAAWP,QAAQ,UAAUG,SAAS,a,sDC3B/CK,EArCF,SAAC,GAA2B,IAAzBvE,EAAwB,EAAxBA,MAAOc,EAAiB,EAAjBA,WACnB0D,QAAQC,IAAIzE,GADwB,IAEpB0E,EAASC,cAAnBC,OAAUF,GAFoB,EAGC1E,EAAM0E,EAAK,GAAK1E,EAAM0E,EAAK,GAAK,GAAhE/E,EAH+B,EAG/BA,SAAUF,EAHqB,EAGrBA,UAAWuC,EAHU,EAGVA,QAE1B,OACI,kBAAC6C,EAAA,EAAD,CAAQC,YAAU,EAACC,MAAM,GACrB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAM9C,GAAG,KACL,kBAAC+C,EAAA,EAAD,CAAYC,KAAK,QAAQC,MAAM,UAAUjE,aAAW,SAChD,kBAAC,IAAD,UAKhB,yBAAKP,MAAO,CAACyE,UAAW,GAAI7B,QAAS,KAC/BxD,EAAM0E,EAAK,IAAM,6BACf,oCAAU/E,GACV,0CAAgB,IAAImC,KAAKrC,GAAWsC,sBACpC,wCAAc,IAAID,KAAKE,GAASD,sBAChC,kBAAC,IAAD,CAAMI,GAAG,KACL,kBAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMvB,EAAWd,EAAM0E,EAAK,MAA7C,aAIH1E,EAAM0E,EAAK,IACR,wDC4GTY,EAvHH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTpF,EADS,KACFqF,EADE,KAECC,EAAQC,cAAlBC,SAFS,EAGkBJ,mBAAkB,WAATE,EAAoB,EAAI,GAHnD,mBAGTG,EAHS,KAGEC,EAHF,KAIVC,EAAQC,aAAY,SAAAD,GAAK,OAAIA,KAC7BE,EAAWC,cACXC,EAAUC,cAQR1G,EAA+BqG,EAA/BrG,UAAWO,EAAoB8F,EAApB9F,MAAOL,EAAamG,EAAbnG,SAE1B,GAAIF,IAAcU,EAAMuE,GAAI,CAC1B,IAAM0B,EAAUC,aAAY,WAC1B,IAAM3G,EAAOoC,KAAKwE,MAAQ7G,EAC1B+F,GAAS,SAAAe,GAAI,kCAASA,GAAT,IAAe7G,eAE9B8F,GAAS,SAAAe,GAAI,kCAASA,GAAT,IAAe7B,GAAI0B,OAIlC,IAsBMtF,EAAa,SAAC0F,GAClB,IAAMC,EAAWzG,EAAM0C,QAAO,SAAAgE,GAAC,OAAIA,EAAEjH,YAAc+G,EAAK/G,aACxDuG,EAASjG,EAAS0G,KAGdE,EAAY,SAACC,EAAKC,GAAN,OAAe1D,KAAK2D,MAAM3D,KAAK4D,UAAYF,EAAMD,IAASA,GAyB5E,OACE,yBAAKjG,UAAU,OACb,kBAACqG,EAAA,EAAD,CAAWhD,MAAOrE,EAAUsH,SAAU,SAACC,GAAD,OAAOlB,EAAS/F,EAAYiH,EAAEC,OAAOnD,SAASU,GAAG,iBAAiBP,MAAM,sBAE9G,kBAAC,EAAD,CAAOhE,MAAOA,EAAMT,QAElBD,GAAa,kBAAC2C,EAAA,EAAD,CAAQC,QA1DR,WACjB2D,EAASnG,EAAaiC,KAAKwE,UAyDV,SAGd7G,GAAa,kBAAC2C,EAAA,EAAD,CAAQC,QAzDR,WAChB,GAAK1C,EAAL,CAIA,IAAM6G,EAAO,CACX7G,WACAF,YACAuC,QAASF,KAAKwE,OAEVG,EAAWzG,EAAK,sBAAQA,GAAR,CAAewG,IAAS,CAAEA,GAChDY,OAAOC,cAAclH,EAAMuE,IAC3Bc,EAAS,IACTQ,EAASnG,EAAa,OACtBmG,EAASjG,EAAS0G,IAClBT,EAAS/F,EAAY,UAbnBqH,MAAM,4BAuDQ,QAEd,kBAACrG,EAAA,EAAD,KACE,kBAACsG,EAAA,EAAD,CACEvD,MAAO4B,EACP4B,eAAe,UACfC,UAAU,UACVrC,MAAM,UACN6B,SAtFiB,SAACS,EAAOC,GAE/BzB,EAAQ0B,KADa,CAAC,QAAS,UACLD,IAC1B9B,EAAa8B,IAoFPxG,aAAW,wBACX0G,QAAQ,aAER,kBAACC,EAAA,EAAD,CAAK3D,MAAM,cACX,kBAAC2D,EAAA,EAAD,CAAK3D,MAAM,kBAIA,IAAdyB,GAAmB,oCAClB,kBAAC,EAAD,CAAM5F,MAAOA,EAAOc,WAAYA,IAChC,yBAAKF,MAAO,CAACmH,QAAS,OAAQC,cAAe,gBAC3C,kBAAC5F,EAAA,EAAD,CAAQC,QAAS,kBApDH,WACpB,IAAM4F,EAAa,IAAInG,MAAO,IAAIA,MAAQW,gBAAkByF,UAC5D1D,QAAQC,IAAIwD,GAKZ,IAJA,IAAME,EAAWxB,EAAU,GAAI,IAEzBF,EAAW,GAER9E,EAAI,EAAGA,EAAIwG,EAAUxG,IAAM,CAClC,IAAMlC,EAAYkH,EAAU,EAAG,MACzB3E,EAAU2E,EAAU,IAAY,MAEhCH,EAAO,CACX7G,SAAS,QAAD,OAAUgC,EAAI,GACtBlC,UAAWwI,EAAYxI,EACvBuC,QAASiG,EAAYxI,EAAYuC,GAGnCyE,EAASmB,KAAKpB,GAGhBR,EAASjG,EAAS0G,IAgCW2B,KAAvB,cAGW,IAAdxC,GAAmB,kBAACyC,EAAD,CAAOrI,MAAOA,IAElC,kBAAC,IAAD,CAAOyF,KAAK,cACV,kBAAC,EAAD,CAAMzF,MAAQA,EAAQc,WAAYA,O,QCjIpCwH,EAAelB,OAAOkB,aA6BbC,EARDC,aNZC,WAAmC,IAAlC1C,EAAiC,uDAAzBtG,EAAciJ,EAAW,uCAC7C,OAAQA,EAAO3I,MACX,IAfmB,qBAgBf,OAAO,2BACAgG,GADP,IAEIlG,aAAc6I,EAAO7I,eAG7B,IApBe,iBAqBX,OAAO,2BACAkG,GADP,IAEIrG,UAAWgJ,EAAOhJ,YAG1B,IAzBS,WA0BL,OAAO,2BACAqG,GADP,IAEIpG,KAAM+I,EAAO/I,OAGrB,IA9BU,YA+BN,OAAO,2BACAoG,GADP,IAEI9F,MAAOyI,EAAOzI,QAGtB,IAnCc,gBAoCV,OAAO,2BACA8F,GADP,IAEInG,SAAU8I,EAAO9I,WAIzB,QACI,OAAO,eAAKmG,MM/BD,WAErB,GAAiD,OAA7CwC,EAAaI,QAAQ,oBACrB,OAAOC,KAAKC,MAAMN,EAAaI,QAAQ,qBAQ3CG,GACAC,aAtB6B,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAC/B,OAAO,SAACC,GAAD,OAAU,SAACP,GACd,IAAMQ,EAASD,EAAKP,GAIpB,OAHAH,EAAaY,QAAQ,mBAAoBP,KAAKQ,UAC1CJ,MAEGE,QCJbG,IAASC,OACP,kBAAC,IAAD,CAAUd,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAKJe,SAASC,eAAe,W","file":"static/js/main.690ca11b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Clock\":\"Clock_Clock__3dHhC\"};","const SET_TIMER_INTERVAL = 'SET-TIMER-INTERVAL'\nconst SET_START_TIME = 'SET-START-TIME'\nconst SET_TIME = 'SET-TIME'\nconst SET_TASKS = 'SET-TASKS'\nconst SET_TASK_NAME = 'SET-TASK-NAME'\n\nconst initialState = {\n    startTime: null,\n    time: ['00','00','00'],\n    taskName: '',\n    taskInterval: false,\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_TIMER_INTERVAL: {\n            return {\n                ...state,\n                taskInterval: action.taskInterval\n            }\n        }\n        case SET_START_TIME: {\n            return {\n                ...state,\n                startTime: action.startTime\n            }\n        }\n        case SET_TIME: {\n            return {\n                ...state,\n                time: action.time\n            }\n        }\n        case SET_TASKS: {\n            return {\n                ...state,\n                tasks: action.tasks\n            }\n        }\n        case SET_TASK_NAME: {\n            return {\n                ...state,\n                taskName: action.taskName\n            }\n        }\n\n        default: {\n            return { ...state }\n        }\n    }\n}\n\nexport const setTimerInterval = (taskInterval) => ({type: SET_TIMER_INTERVAL, taskInterval})\n\nexport const setStartTime = (startTime) => ({type: SET_START_TIME, startTime})\n\nexport const setTime = (time) => ({type: SET_TIME, time})\n\nexport const setTasks = (tasks) => ({type: SET_TASKS, tasks})\n\nexport const setTaskName = (taskName) => ({type: SET_TASK_NAME, taskName})","import React from 'react'\nimport style from './Clock.module.css'\n\nconst formatTimer = duration => {\n    let milliseconds = parseInt((duration%1000)/100)\n        , seconds = parseInt((duration/1000)%60)\n        , minutes = parseInt((duration/(1000*60))%60)\n        , hours = parseInt((duration/(1000*60*60))%24)\n\n    hours = (hours < 10) ? `0${hours}` : hours\n    minutes = (minutes < 10) ? `0${minutes}` : minutes\n    seconds = (seconds < 10) ? `0${seconds}` : seconds\n\n    return {hours, minutes, seconds, milliseconds}\n}\n\nconst Clock = ({timer = 0}) => {\n    const { hours, minutes, seconds } = formatTimer(timer)\n    return (\n        <div className={style.Clock}>\n            <span>{hours}:{minutes}:{seconds}</span>\n        </div>\n    );\n}\n\nexport default Clock;","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom'\n\nconst Logs = ({ tasks, deleteTask }) => {\n\n    function msToHMS( ms ) {\n\n        var seconds = parseInt(ms / 1000);\n        var hours = parseInt( seconds / 3600 ); \n        seconds = seconds % 3600; \n        var minutes = parseInt( seconds / 60 );\n        seconds = seconds % 60;\n        return((hours < 10 ? `0${hours}` : hours)+\":\"+(minutes < 10 ? `0${minutes}` : minutes)+\":\"+(seconds < 10 ? `0${seconds}` : seconds));\n    }\n\n    return (\n        <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>№</TableCell>\n                        <TableCell align=\"right\">Task</TableCell>\n                        <TableCell align=\"right\">Time start</TableCell>\n                        <TableCell align=\"right\">Time end</TableCell>\n                        <TableCell align=\"right\">Time spent</TableCell>\n                        <TableCell align=\"right\">Info</TableCell>\n                        <TableCell align=\"right\">Delete</TableCell>\n                    </TableRow>\n                </TableHead>\n\n                <TableBody>\n                    {tasks && tasks.map((row, i) => (\n                        <TableRow key={row.startTime}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {i + 1}\n                            </TableCell>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.taskName}\n                            </TableCell>\n                            <TableCell align=\"right\">{new Date(row.startTime).toLocaleTimeString()}</TableCell>\n                            <TableCell align=\"right\">{new Date(row.endTime).toLocaleTimeString()}</TableCell>\n                            <TableCell align=\"right\">{msToHMS(row.endTime - row.startTime) }</TableCell>\n                            <TableCell align=\"right\">\n                            <Link to={`/tasks/${i + 1}`}><Button>INFO</Button></Link>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <Button onClick={() => deleteTask(row)}>DELETE</Button>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nexport default Logs\n","import * as React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, ResponsiveContainer, LabelList, Label, CartesianGrid } from 'recharts';\n\nconst data = [\n    {hour: 0, minutes: 0},\n    {hour: 1, minutes: 0},\n    {hour: 2, minutes: 15},\n    {hour: 3, minutes: 0},\n    {hour: 4, minutes: 0},\n    {hour: 5, minutes: 46},\n    {hour: 6, minutes: 30},\n    {hour: 7, minutes: 10},\n    {hour: 8, minutes: 0},\n    {hour: 9, minutes: 0},\n    {hour: 10, minutes: 0},\n    {hour: 11, minutes: 0},\n]\n\nconst generateData = (data) => {\n    if (!data) return []\n\n    const today = (new Date()).toDateString;\n\n    data = data.filter(({startTime}) => (new Date(startTime)).toDateString === today)\n\n    const res = []\n    for (let i = 0; i < 24; i++) res[i] = 0\n\n    data.forEach( ({startTime, endTime}) => {\n\n        let startHour = (new Date(startTime)).getHours()\n        let startMinutes = (new Date(startTime)).getMinutes()\n\n        let minutes = (endTime - startTime) / 60000\n\n        const maxForHour = []\n\n        for (let i = startHour; i < 24; i++) {\n            if (i === startHour) maxForHour[i] = 60 - startMinutes - res[i]\n            else maxForHour[i] = 60 - res[i]\n        }\n\n        for (let i = startHour; i < 24; i++) {\n            if ( minutes >= maxForHour[i] ) {\n                res[i] += maxForHour[i]\n                minutes -= maxForHour[i]\n            } else {\n                res[i] += minutes\n                minutes = 0\n            }\n        }\n    })\n\n    return res.map((minutes, hour) => ({hour: +hour, minutes: Math.ceil(minutes)}))\n}\n\nconst TasksChart = ({ tasks }) => {\n    const data = generateData(tasks)\n    return (\n        <div style={{width: '100%', height: '55vh', padding: 8}}>\n            <ResponsiveContainer>\n                <BarChart margin={{ top: 20, right: 30, left: 0, bottom: 0 }} data={data}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"hour\">\n                        <Label value=\"Hours\" offset={0} position=\"insideBottom\" />\n                    </XAxis>\n                    <YAxis label={{ value: 'Minutes in hours', angle: -90, position: 'insideLeft' }}/> \n                    \n                    <Bar dataKey=\"minutes\" barSize={10} fill=\"#8884d8\">\n                        <LabelList dataKey=\"minutes\" position=\"top\" />\n                    </Bar> \n                </BarChart>\n             </ResponsiveContainer>  \n        </div>\n        \n        \n    )\n}\n\nexport default TasksChart;\n\nconst formatTimer = duration => {\n    let milliseconds = parseInt((duration%1000)/100)\n        , seconds = parseInt((duration/1000)%60)\n        , minutes = parseInt((duration/(1000*60))%60)\n        , hours = parseInt((duration/(1000*60*60))%24)\n\n    hours = (hours < 10) ? `0${hours}` : hours\n    minutes = (minutes < 10) ? `0${minutes}` : minutes\n    seconds = (seconds < 10) ? `0${seconds}` : seconds\n\n    return {hours, minutes, seconds, milliseconds}\n}","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { Button, Dialog, Toolbar, IconButton,AppBar, Paper, List } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst Info = ({ tasks, deleteTask }) => {\n    console.log(tasks);\n    let { params: { id } } = useRouteMatch()\n    let {taskName, startTime, endTime} = tasks[id - 1] ? tasks[id - 1] : {}\n\n    return (\n        <Dialog fullScreen open={true}>\n            <AppBar>\n                <Toolbar>\n                    <Link to='/'>\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"close\">\n                            <CloseIcon />\n                        </IconButton>\n                    </Link>\n                </Toolbar> \n            </AppBar>\n            <div style={{marginTop: 48, padding: 16}}>\n                { tasks[id - 1] && <div>\n                    <p>Name: {taskName}</p>\n                    <p>Start Time: {new Date(startTime).toLocaleTimeString()}</p>\n                    <p>End Time: {new Date(endTime).toLocaleTimeString()}</p>\n                    <Link to='/'>\n                        <Button onClick={() => deleteTask(tasks[id - 1])}>DELETE</Button>\n                    </Link>\n                </div>}\n                {\n                    !tasks[id - 1] && (\n                        <div>\n                            Error! No such task!\n                        </div>\n                    )\n                }\n            </div>\n        </Dialog>\n    )\n}\n\nexport default Info\n","import React, { useState } from 'react';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setStartTime, setTasks, setTaskName} from './redux/reducers'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { Paper } from '@material-ui/core'\nimport { useHistory } from \"react-router-dom\";\nimport {\n  useLocation,\n  Route\n} from \"react-router-dom\"\n\n\nimport Clock from './components/Clock/Clock'\nimport Logs from './components/Logs/Logs';\nimport Chart from './components/Chart/Chart';\nimport Info from './components/Info/Info';\n\nconst App = () => {\n  const [timer, setTimer] = useState({})\n  const {pathname: path} = useLocation()\n  const [tabsValue, setTabsValue] = useState(path === '/chart' ? 1 : 0)\n  const state = useSelector(state => state)\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleTabsChange = (event, newValue) => {\n    const routerValues = ['/logs', '/chart']\n    history.push(routerValues[newValue])\n    setTabsValue(newValue)\n  }\n\n  const { startTime, tasks, taskName } = state;\n  \n  if (startTime && !timer.id) {\n    const timerId = setInterval(() => {\n      const time = Date.now() - startTime\n      setTimer(prev => ({...prev, time}))\n    })\n    setTimer(prev => ({...prev, id: timerId}))\n  }\n\n\n  const startTimer = () => {\n    dispatch(setStartTime(Date.now()))\n  }\n\n  const stopTimer = () => {\n    if (!taskName) {\n      alert('Enter task name first!')\n      return;\n    }\n    const task = {\n      taskName,\n      startTime,\n      endTime: Date.now()\n    }\n    const newTasks = tasks ? [ ...tasks, task ] : [ task ];\n    window.clearInterval(timer.id)\n    setTimer({})\n    dispatch(setStartTime(null))\n    dispatch(setTasks(newTasks))\n    dispatch(setTaskName(''))\n  }\n\n  const deleteTask = (task) => {\n    const newTasks = tasks.filter(t => t.startTime !== task.startTime)\n    dispatch(setTasks(newTasks))\n  }\n\n  const getRandom = (min, max) => (Math.floor(Math.random() * (max - min) ) + min)\n\n  const generateTasks = () => {\n    const todayDate = (new Date( (new Date()).toDateString() )).getTime()\n    console.log(todayDate);\n    const quantity = getRandom(10, 15)\n\n    const newTasks = [] \n\n    for (let i = 0; i < quantity; i++ ) {\n      const startTime = getRandom(0, 22.5 * 3600000)\n      const endTime = getRandom(10 * 60000, 90 * 60000)\n\n      const task = {\n        taskName: `Task ${i + 1}`,\n        startTime: todayDate + startTime,\n        endTime: todayDate + startTime + endTime\n      }\n\n      newTasks.push(task)\n    }\n\n    dispatch(setTasks(newTasks))\n  }\n\n  return (\n    <div className=\"App\">\n      <TextField value={taskName} onChange={(e) => dispatch(setTaskName(e.target.value))} id=\"standard-basic\" label=\"Name of your task\" />\n      \n      <Clock timer={timer.time}/>\n\n      {!startTime && <Button onClick={startTimer}>START</Button>\n\n      }\n      {startTime && <Button onClick={stopTimer}>STOP</Button>}\n  \n      <Paper>\n        <Tabs\n          value={tabsValue}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          color=\"primary\"\n          onChange={handleTabsChange}\n          aria-label=\"disabled tabs example\"\n          variant=\"fullWidth\"\n        >\n          <Tab label=\"TASKS LOG\" />\n          <Tab label=\"TASKS CHART\" />\n        </Tabs>\n      </Paper>\n      \n      {tabsValue === 0 && <>\n        <Logs tasks={tasks} deleteTask={deleteTask}/>\n        <div style={{display: 'flex', flexDirection: 'row-reverse'}}>\n          <Button onClick={() => generateTasks()}>GENERATE</Button>\n        </div>\n      </>}\n      {tabsValue === 1 && <Chart tasks={tasks} />}\n\n      <Route path=\"/tasks/:id\">\n        <Info tasks={ tasks } deleteTask={deleteTask}/>\n      </Route>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux'\n\nimport reducer from './reducers'\n\nconst localStorage = window.localStorage\n\nconst localStorageMiddleware = ({getState}) => {\n  return (next) => (action) => {\n      const result = next(action);\n      localStorage.setItem('applicationState', JSON.stringify(\n          getState()\n      ));\n      return result;\n  };\n};\n\nconst reHydrateStore = () => {\n\n  if (localStorage.getItem('applicationState') !== null) {\n      return JSON.parse(localStorage.getItem('applicationState'))\n\n  }\n}\n\n\nconst store = createStore(\n  reducer,\n  reHydrateStore(),\n  applyMiddleware(\n    localStorageMiddleware\n  )\n)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport { BrowserRouter as Router, Redirect } from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n    \n    ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}