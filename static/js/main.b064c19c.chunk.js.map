{"version":3,"sources":["components/Clock/Clock.module.css","redux/reducers.js","components/Clock/Clock.js","components/Logs/Logs.js","components/Chart/Chart.js","components/Info/Info.js","App.js","redux/store.js","index.js"],"names":["module","exports","initialState","startTime","time","taskName","taskInterval","setStartTime","type","setTasks","tasks","setTaskName","Clock","timer","milliseconds","parseInt","seconds","minutes","hours","formatTimer","className","style","Logs","deleteTask","Paper","TableContainer","component","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","i","key","scope","Date","toLocaleTimeString","endTime","ms","msToHMS","to","Button","onClick","TasksChart","data","res","forEach","startHour","getHours","maxForStartHour","getMinutes","console","log","currentHour","maxForCurrentHour","hour","generateData","width","height","padding","margin","top","right","left","bottom","strokeDasharray","dataKey","value","offset","position","label","angle","barSize","fill","Info","id","useRouteMatch","params","Dialog","fullScreen","open","AppBar","Toolbar","textDecoration","color","IconButton","edge","marginTop","App","useState","setTimer","path","useLocation","pathname","tabsValue","setTabsValue","useSelector","state","dispatch","useDispatch","history","useHistory","timerId","setInterval","now","prev","task","newTasks","filter","t","getRandom","min","max","Math","floor","random","TextField","onChange","e","target","window","clearInterval","alert","Tabs","event","newValue","push","variant","Tab","display","flexDirection","todayDate","toDateString","getTime","quantity","length","indexOf","sort","a","b","maxLengthOfTask","generateTasks","Chart","localStorage","store","createStore","action","getItem","JSON","parse","reHydrateStore","applyMiddleware","getState","next","result","setItem","stringify","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.b064c19c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Clock\":\"Clock_Clock__3dHhC\"};","const SET_TIMER_INTERVAL = 'SET-TIMER-INTERVAL'\nconst SET_START_TIME = 'SET-START-TIME'\nconst SET_TIME = 'SET-TIME'\nconst SET_TASKS = 'SET-TASKS'\nconst SET_TASK_NAME = 'SET-TASK-NAME'\n\nconst initialState = {\n    startTime: null,\n    time: ['00','00','00'],\n    taskName: '',\n    taskInterval: false,\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_TIMER_INTERVAL: {\n            return {\n                ...state,\n                taskInterval: action.taskInterval\n            }\n        }\n        case SET_START_TIME: {\n            return {\n                ...state,\n                startTime: action.startTime\n            }\n        }\n        case SET_TIME: {\n            return {\n                ...state,\n                time: action.time\n            }\n        }\n        case SET_TASKS: {\n            return {\n                ...state,\n                tasks: action.tasks\n            }\n        }\n        case SET_TASK_NAME: {\n            return {\n                ...state,\n                taskName: action.taskName\n            }\n        }\n\n        default: {\n            return { ...state }\n        }\n    }\n}\n\nexport const setTimerInterval = (taskInterval) => ({type: SET_TIMER_INTERVAL, taskInterval})\n\nexport const setStartTime = (startTime) => ({type: SET_START_TIME, startTime})\n\nexport const setTime = (time) => ({type: SET_TIME, time})\n\nexport const setTasks = (tasks) => ({type: SET_TASKS, tasks})\n\nexport const setTaskName = (taskName) => ({type: SET_TASK_NAME, taskName})","import React from 'react'\nimport style from './Clock.module.css'\n\nconst formatTimer = timer => {\n    let milliseconds = parseInt((timer%1000)/100)\n        , seconds = parseInt((timer/1000)%60)\n        , minutes = parseInt((timer/(1000*60))%60)\n        , hours = parseInt((timer/(1000*60*60))%24)\n\n    hours = (hours < 10) ? `0${hours}` : hours\n    minutes = (minutes < 10) ? `0${minutes}` : minutes\n    seconds = (seconds < 10) ? `0${seconds}` : seconds\n\n    return {hours, minutes, seconds, milliseconds}\n}\n\nconst Clock = ({timer = 0}) => {\n    const { hours, minutes, seconds } = formatTimer(timer)\n    return (\n        <div className={style.Clock}>\n            <span>{hours}:{minutes}:{seconds}</span>\n        </div>\n    );\n}\n\nexport default Clock;","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom'\n\nfunction msToHMS( ms ) {\n\n    var seconds = parseInt(ms / 1000);\n    var hours = parseInt( seconds / 3600 ); \n    seconds = seconds % 3600; \n    var minutes = parseInt( seconds / 60 );\n    seconds = seconds % 60;\n    return((hours < 10 ? `0${hours}` : hours)+\":\"+(minutes < 10 ? `0${minutes}` : minutes)+\":\"+(seconds < 10 ? `0${seconds}` : seconds));\n}\n\nconst Logs = ({ tasks, deleteTask }) => {\n\n    return (\n        <Paper>\n        <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>№</TableCell>\n                        <TableCell align=\"right\">Task</TableCell>\n                        <TableCell align=\"right\">Time start</TableCell>\n                        <TableCell align=\"right\">Time end</TableCell>\n                        <TableCell align=\"right\">Time spent</TableCell>\n                        <TableCell align=\"right\">Info</TableCell>\n                        <TableCell align=\"right\">Delete</TableCell>\n                    </TableRow>\n                </TableHead>\n\n                <TableBody>\n                    {tasks && tasks.map((row, i) => (\n                        <TableRow key={row.startTime}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {i + 1}\n                            </TableCell>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.taskName}\n                            </TableCell>\n                            <TableCell align=\"right\">{new Date(row.startTime).toLocaleTimeString()}</TableCell>\n                            <TableCell align=\"right\">{new Date(row.endTime).toLocaleTimeString()}</TableCell>\n                            <TableCell align=\"right\">{msToHMS(row.endTime - row.startTime) }</TableCell>\n                            <TableCell align=\"right\">\n                            <Link to={`/tasks/${i + 1}`}><Button>INFO</Button></Link>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <Button onClick={() => deleteTask(row)}>DELETE</Button>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n        </Paper>\n    );\n}\n\nexport default Logs\n","import * as React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, ResponsiveContainer, LabelList, Label, CartesianGrid } from 'recharts';\n\n// const data = [\n//     {hour: 0, minutes: 0},\n//     {hour: 1, minutes: 0},\n//     {hour: 2, minutes: 15},\n//     {hour: 3, minutes: 0},\n//     {hour: 4, minutes: 0},\n//     {hour: 5, minutes: 46},\n//     {hour: 6, minutes: 30},\n//     {hour: 7, minutes: 10},\n//     {hour: 8, minutes: 0},\n//     {hour: 9, minutes: 0},\n//     {hour: 10, minutes: 0},\n//     {hour: 11, minutes: 0},\n// ]\n\nconst generateData = (data) => {\n    const res = [];\n    for (let i = 0; i < 24; i++) res[i] = 0\n\n    data.forEach( ({startTime, endTime}) => {\n        let minutes = (endTime - startTime) / 60000\n\n        const startHour = (new Date (startTime)).getHours()\n        const startMinutes = (new Date (startTime)).getMinutes()\n\n        const maxForStartHour = 60 - startMinutes\n        console.log(maxForStartHour);\n        if (minutes <= maxForStartHour) {\n            res[startHour] += minutes\n            minutes = 0\n        } else {\n            res[startHour] += maxForStartHour\n            minutes -= maxForStartHour\n        }\n\n        let currentHour = startHour + 1;\n        console.log(minutes);\n        while (minutes < 0) {\n            const maxForCurrentHour = 60 - res[currentHour]\n\n            if (minutes <= maxForCurrentHour) {\n                res[currentHour] += minutes\n                minutes = 0\n            } else {\n                res[currentHour] += maxForCurrentHour\n                minutes = minutes - maxForCurrentHour\n            }\n            console.log(minutes);\n        }\n        console.log(res);\n    })\n\n    return res.map((minutes, hour) => ({hour: hour, minutes: minutes}))\n}\n\nconst TasksChart = ({ tasks }) => {\n    const data = generateData(tasks)\n    return (\n        <div style={{width: '100%', height: '55vh', padding: 8}}>\n            <ResponsiveContainer>\n                <BarChart margin={{ top: 20, right: 30, left: 0, bottom: 0 }} data={data}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"hour\">\n                        <Label value=\"Hours\" offset={0} position=\"insideBottom\" />\n                    </XAxis>\n                    <YAxis label={{ value: 'Minutes in hours', angle: -90, position: 'insideLeft' }}/> \n                    \n                    <Bar dataKey=\"minutes\" barSize={10} fill=\"#8884d8\">\n                        <LabelList dataKey=\"minutes\" position=\"top\" />\n                    </Bar> \n                </BarChart>\n             </ResponsiveContainer>  \n        </div>\n        \n        \n    )\n}\n\nexport default TasksChart;","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { Button, Dialog, Toolbar, IconButton,AppBar } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst Info = ({ tasks, deleteTask }) => {\n\n    let { params: { id } } = useRouteMatch()\n    let {taskName, startTime, endTime} = tasks[id - 1] ? tasks[id - 1] : {}\n    return (\n        <Dialog fullScreen open={true}>\n            <AppBar>\n                <Toolbar>\n                    <Link to='/' style={{textDecoration: 'none', color: 'white'}}>\n                        <IconButton edge=\"start\" color=\"secondary\" aria-label=\"close\">\n                            <CloseIcon />\n                        </IconButton>\n                    </Link>\n                </Toolbar> \n            </AppBar>\n            <div style={{ marginTop: 48, padding: 16 }}>\n                { tasks[id - 1] && <div>\n                    <p>Name: {taskName}</p>\n                    <p>Start Time: {new Date(startTime).toLocaleTimeString()}</p>\n                    <p>End Time: {new Date(endTime).toLocaleTimeString()}</p>\n                    <Link to='/'>\n                        <Button onClick={() => deleteTask(tasks[id - 1])}>DELETE</Button>\n                    </Link>\n                </div>}\n                {\n                    !tasks[id - 1] && (\n                        <div>\n                            Error! No such task!\n                        </div>\n                    )\n                }\n            </div>\n        </Dialog>\n    )\n}\n\nexport default Info\n","import React, { useState } from 'react';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setStartTime, setTasks, setTaskName} from './redux/reducers'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { AppBar } from '@material-ui/core'\nimport { useHistory } from \"react-router-dom\";\nimport {\n  useLocation,\n  Route\n} from \"react-router-dom\"\n\n\nimport Clock from './components/Clock/Clock'\nimport Logs from './components/Logs/Logs';\nimport Chart from './components/Chart/Chart';\nimport Info from './components/Info/Info';\n\nconst App = () => {\n  const [timer, setTimer] = useState({})\n  const {pathname: path} = useLocation()\n  const [tabsValue, setTabsValue] = useState(path === '/chart' ? 1 : 0)\n  const { startTime, tasks, taskName } = useSelector(state => state)\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleTabsChange = (event, newValue) => {\n    const routerValues = ['/logs', '/chart']\n    history.push(routerValues[newValue])\n    setTabsValue(newValue)\n  }\n  \n  if (startTime && !timer.id) {\n    const timerId = setInterval(() => {\n      const time = Date.now() - startTime\n      setTimer(prev => ({...prev, time}))\n    })\n    setTimer(prev => ({...prev, id: timerId}))\n  }\n\n  const startTimer = () => {\n    dispatch(setStartTime(Date.now()))\n  }\n\n  const stopTimer = () => {\n    if (!taskName) {\n      alert('Enter task name first!')\n      return;\n    }\n    const task = {\n      taskName,\n      startTime,\n      endTime: Date.now()\n    }\n    const newTasks = tasks ? [ ...tasks, task ] : [ task ];\n    window.clearInterval(timer.id)\n    setTimer({})\n    dispatch(setStartTime(null))\n    dispatch(setTasks(newTasks))\n    dispatch(setTaskName(''))\n  }\n\n  const deleteTask = (task) => {\n    const newTasks = tasks.filter(t => t.startTime !== task.startTime)\n    dispatch(setTasks(newTasks))\n  }\n\n  const getRandom = (min, max) => (Math.floor(Math.random() * (max - min) ) + min)\n\n  const generateTasks = () => {\n    const todayDate = (new Date( (new Date()).toDateString() )).getTime()\n    console.log(todayDate);\n    const quantity = getRandom(10, 15)\n\n    let startTime = 0\n    const newTasks = [] \n\n    while (newTasks.length < quantity) {\n      startTime = todayDate + getRandom(0, 22.5 * 3600000)\n      newTasks.push({startTime})\n      newTasks.filter((t, i) => (newTasks.indexOf(t) === i))\n      newTasks.sort(function (a, b) {\n        if (a.startTime > b.startTime) {\n          return 1;\n        }\n        if (a.startTime < b.startTime) {\n          return -1;\n        }\n        return 0;\n      });\n      startTime = newTasks[newTasks.length - 1].startTime + 10 * 60000 \n    }\n\n    for (let i = 0; i < quantity; i++ ) {\n      \n      let maxLengthOfTask;\n      if (i === quantity - 1) {\n        maxLengthOfTask = 90 * 60000\n      } else {\n        if ( newTasks[i + 1].startTime - newTasks[i].startTime < 90 * 60000) {\n          maxLengthOfTask = newTasks[i + 1].startTime - newTasks[i].startTime \n        } else {\n          maxLengthOfTask = 90 * 60000\n        }\n      }\n\n      newTasks[i] = {\n        ...newTasks[i],\n        taskName: `Task ${i + 1}`,\n        endTime: newTasks[i].startTime + getRandom(10 * 60000, maxLengthOfTask)\n      }\n  \n    }\n\n    dispatch(setTasks(newTasks))\n  }\n\n  return (\n    <div className=\"App\">\n      <TextField value={taskName} onChange={(e) => dispatch(setTaskName(e.target.value))} id=\"standard-basic\" label=\"Name of your task\" />\n      \n      <Clock timer={timer.time}/>\n\n      {!startTime && <Button onClick={startTimer}>START</Button>\n\n      }\n      {startTime && <Button onClick={stopTimer}>STOP</Button>}\n  \n      <AppBar position=\"static\" color='primary'>\n        <Tabs\n          value={tabsValue}\n          onChange={handleTabsChange}\n          aria-label=\"disabled tabs example\"\n          variant=\"fullWidth\"\n        >\n          <Tab label=\"TASKS LOG\" />\n          <Tab label=\"TASKS CHART\" />\n        </Tabs>\n      </AppBar>\n      \n      {tabsValue === 0 && <>\n        <Logs tasks={tasks} deleteTask={deleteTask}/>\n        <div style={{display: 'flex', flexDirection: 'row-reverse'}}>\n          <Button onClick={() => generateTasks()}>GENERATE</Button>\n        </div>\n      </>}\n      {tabsValue === 1 && <Chart tasks={tasks} />}\n\n      <Route path=\"/tasks/:id\">\n        <Info tasks={ tasks } deleteTask={deleteTask}/>\n      </Route>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux'\n\nimport reducer from './reducers'\n\nconst localStorage = window.localStorage\n\nconst localStorageMiddleware = ({getState}) => {\n  return (next) => (action) => {\n      const result = next(action);\n      localStorage.setItem('applicationState', JSON.stringify(\n          getState()\n      ));\n      return result;\n  };\n};\n\nconst reHydrateStore = () => {\n\n  if (localStorage.getItem('applicationState') !== null) {\n      return JSON.parse(localStorage.getItem('applicationState'))\n\n  }\n}\n\n\nconst store = createStore(\n  reducer,\n  reHydrateStore(),\n  applyMiddleware(\n    localStorageMiddleware\n  )\n)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename={'/task-timer'}>\n      <App />\n    </Router>\n  </Provider>\n    \n    ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}