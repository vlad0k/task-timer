{"version":3,"sources":["components/Clock/Clock.module.css","redux/app-reducer.js","components/Clock/Clock.js","utils/timer-utils.js","components/DeleteButton/DeleteButton.js","components/Logs/Logs.js","components/Chart/Chart.js","components/Info/Info.js","components/Tabs/Tabs.js","components/TaskNameInput/TaskNameInput.js","components/Dialog/Dialog.js","utils/generate-tasks.js","App.js","redux/store.js","index.js"],"names":["module","exports","initialState","startTime","taskName","tasks","Clock","timer","setTimer","timerId","setInterval","time","Date","now","prev","id","createTimer","milliseconds","parseInt","seconds","minutes","hours","msToHMS","className","style","Transition","React","forwardRef","props","ref","Slide","direction","DeleteButton","task","children","useState","open","setOpen","dispatch","useDispatch","history","useHistory","handleClose","Button","onClick","color","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogContent","DialogActions","type","deleteTask","push","Logs","useSelector","state","TableContainer","width","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","i","key","scope","toLocaleTimeString","endTime","ms","to","TasksChart","data","res","Array","keys","forEach","startHour","getHours","startMinutes","getMinutes","endHour","endMinutes","currentHour","hour","generateData","height","padding","margin","top","right","left","bottom","strokeDasharray","dataKey","value","offset","position","label","angle","barSize","fill","Info","useRouteMatch","params","fullScreen","AppBar","Toolbar","textDecoration","IconButton","edge","marginTop","Tabs","path","useLocation","pathname","tabsValue","setTabsValue","onChange","event","newValue","variant","Tab","TaskNameInput","Input","setTaskName","target","placeholder","Dialog","setVisible","fullWidth","maxWidth","DialogTitle","DialogContentText","getRandom","min","max","Math","floor","random","generateTasks","startPoints","generateStartPoints","numberOfStartPoints","length","sort","next","filter","t","arr","endPoints","sp","maxLength","todayDate","toDateString","getTime","App","alertIsVisible","setAlertIsVisible","exact","paddingBottom","window","clearInterval","newTask","display","flexDirection","alignItems","justifyContent","newTasks","setTasks","Chart","localStorage","store","createStore","action","getItem","JSON","parse","reHydrateStore","applyMiddleware","getState","result","setItem","stringify","ReactDOM","render","basename","document","getElementById"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,MAAQ,uB,iNCKpBC,EAAe,CACjBC,UAAW,KACXC,SAAU,KACVC,MAAO,I,mCCSIC,EAbD,SAAC,GAAoC,IAAlCH,EAAiC,EAAjCA,UAAWI,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,UCJR,WAAyC,IAAxCL,EAAuC,uDAA3B,KAAMM,EAAqB,uCAAbD,EAAa,uCAC/D,GAAIL,IAAcM,EAAS,CACvB,IAAMA,EAAUC,aAAY,WAC1B,IAAMC,EAAOC,KAAKC,MAAQV,EAC1BK,GAAS,SAAAM,GAAI,kCAASA,GAAT,IAAeH,eAE9BH,GAAS,SAAAM,GAAI,kCAASA,GAAT,IAAeC,GAAIN,QDApCO,CAAYb,EAAWI,EAAMQ,GAAIP,GAFa,MCM3B,WAAgB,IAAfD,EAAc,uDAAN,EAC1BU,EAAeC,SAAUX,EAAM,IAAM,KACnCY,EAAUD,SAAUX,EAAM,IAAM,IAChCa,EAAUF,SAAUX,EAAM,IAAW,IACrCc,EAAQH,SAAUX,EAAM,KAAc,IAM5C,MAAO,CAACc,MAJRA,EAASA,EAAQ,GAAT,WAAmBA,GAAUA,EAItBD,QAHfA,EAAWA,EAAU,GAAX,WAAqBA,GAAYA,EAGnBD,QAFxBA,EAAWA,EAAU,GAAX,WAAqBA,GAAYA,EAEVF,gBDZKK,CAAQf,EAAMI,MAA1CU,EAJsC,EAItCA,MAAOD,EAJ+B,EAI/BA,QAASD,EAJsB,EAItBA,QAExB,OACI,yBAAKI,UAAWC,IAAMlB,OAClB,8BAAOe,EAAP,IAAeD,EAAf,IAAyBD,K,2GEJ/BM,EAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC3D,OAAO,kBAACC,EAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASD,OA8ChCI,EA3CM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAAe,EACjBC,oBAAS,GADQ,mBAClCC,EADkC,KAC5BC,EAD4B,KAGnCC,EAAWC,cAEXC,EAAUC,cAQVC,EAAc,kBAAML,GAAQ,IAIlC,OACI,oCACI,kBAACM,EAAA,EAAD,CAAQC,QAJS,kBAAMP,GAAQ,IAIIQ,MAAM,aAAcX,GAEvD,kBAAC,IAAD,CACIE,KAAMA,EACNU,oBAAqBrB,EACrBsB,aAAW,EACXC,QAASN,EACTO,kBAAgB,2BAChBC,mBAAiB,kCAEjB,kBAACC,EAAA,EAAD,CAAepC,GAAG,4BAAlB,gCAA0E,2BAAKkB,EAAK7B,UAApF,KACA,kBAACgD,EAAA,EAAD,KACI,kBAACT,EAAA,EAAD,CAAQC,QAASF,EAAaG,MAAM,WAApC,UAGA,kBAACF,EAAA,EAAD,CAAQC,QA3BG,WACvBN,EH8CkB,SAAEL,GAAF,MAAa,CAAEoB,KA/DrB,cA+DwClD,UAAW8B,EAAK9B,WG9C3DmD,CAAWrB,IACpBI,GAAQ,GACRG,EAAQe,KAAK,MAwBoCV,MAAM,aAA3C,cChBpB,IA6CeW,EA7CF,WAET,IAAMnD,EAAQoD,aAAa,SAAAC,GAAK,OAAIA,EAAMrD,SAE1C,OACI,kBAACsD,EAAA,EAAD,CAAgBnC,MAAO,CAAEoC,MAAO,QAAUC,UAAWC,KACjD,kBAACC,EAAA,EAAD,CAAOC,aAAW,gBACd,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,QACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,cACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,YACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,cACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,QACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,YAIR,kBAACC,EAAA,EAAD,KACKhE,GAASA,EAAMiE,KAAI,SAACC,EAAKC,GAAN,OAChB,kBAACN,EAAA,EAAD,CAAUO,IAAKF,EAAIpE,WACf,kBAACgE,EAAA,EAAD,CAAWN,UAAU,KAAKa,MAAM,OAC3BF,EAAI,GAET,kBAACL,EAAA,EAAD,CAAWN,UAAU,KAAKa,MAAM,OAC3BH,EAAInE,UAET,kBAAC+D,EAAA,EAAD,CAAWC,MAAM,SAAU,IAAIxD,KAAK2D,EAAIpE,WAAWwE,sBACnD,kBAACR,EAAA,EAAD,CAAWC,MAAM,SAAU,IAAIxD,KAAK2D,EAAIK,SAASD,sBACjD,kBAACR,EAAA,EAAD,CAAWC,MAAM,SAxC7C,SAAkBS,GAEd,IAAI1D,EAAUD,SAAS2D,EAAK,KACxBxD,EAAQH,SAAUC,EAAU,MAChCA,GAAoB,KACpB,IAAIC,EAAUF,SAAUC,EAAU,IAElC,OADAA,GAAoB,IACZE,EAAQ,GAAR,WAAiBA,GAAUA,GAAO,KAAKD,EAAU,GAAV,WAAmBA,GAAYA,GAAS,KAAKD,EAAU,GAAV,WAAmBA,GAAYA,GAiCxEG,CAAQiD,EAAIK,QAAUL,EAAIpE,YACrD,kBAACgE,EAAA,EAAD,CAAWC,MAAM,SACjB,kBAAC,IAAD,CAAMU,GAAE,iBAAYN,EAAI,IAAK,kBAAC7B,EAAA,EAAD,CAAQE,MAAM,WAAd,UAE7B,kBAACsB,EAAA,EAAD,CAAWC,MAAM,SACb,kBAAC,EAAD,CAAcnC,KAAMsC,GAApB,mB,QCAjBQ,EAxBI,SAAC,GAAe,IACzBC,EA/BkB,SAACA,GACzB,IAAMC,EAAM,YAAI,IAAIC,MAAM,IAAIC,QAAQb,KAAI,kBAAM,KA0BhD,OAxBAU,EAAKI,SAAS,YAA2B,IAAzBjF,EAAwB,EAAxBA,UAAWyE,EAAa,EAAbA,QAEjBS,EAAa,IAAIzE,KAAMT,GAAYmF,WACnCC,EAAgB,IAAI3E,KAAMT,GAAYqF,aAEtCC,EAAW,IAAI7E,KAAMgE,GAAUU,WAC/BI,EAAc,IAAI9E,KAAMgE,GAAUY,aAMxC,GAJIH,IAAcI,IACdR,EAAII,IAAeK,EAAaH,GAGhCE,EAAUJ,EAAW,CACrB,IAAIM,EAAcN,EAGlB,IAFAJ,EAAIU,IAAiB,GAAKJ,EAC1BI,GAAe,EACRA,IAAgBF,GACnBR,EAAIU,GAAe,GACnBA,GAAe,EAEnBV,EAAIU,IAAgBD,MAIrBT,EAAIX,KAAI,SAAClD,EAASwE,GAAV,MAAoB,CAACA,KAAMA,EAAMxE,QAASA,MAI5CyE,CADiB,EAAZxF,OAGlB,OACI,uBAAKmB,MAAO,CAACoC,MAAO,OAAQkC,OAAQ,OAAQC,QAAS,IACjD,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAUC,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,KAAM,EAAGC,OAAQ,GAAKpB,KAAMA,GAChE,gBAAC,IAAD,CAAeqB,gBAAgB,QAC/B,gBAAC,IAAD,CAAOC,QAAQ,QACX,gBAAC,IAAD,CAAOC,MAAM,QAAQC,OAAQ,EAAGC,SAAS,kBAE7C,gBAAC,IAAD,CAAOC,MAAO,CAAEH,MAAO,mBAAoBI,OAAQ,GAAIF,SAAU,gBAEjE,gBAAC,IAAD,CAAKH,QAAQ,UAAUM,QAAS,GAAIC,KAAK,WACrC,gBAAC,IAAD,CAAWP,QAAQ,UAAUG,SAAS,a,6CCH/CK,EApCF,WAET,IAAMzG,EAAQoD,aAAa,SAAAC,GAAK,OAAIA,EAAMrD,SAE1BU,EAASgG,cAAnBC,OAAUjG,GAJD,EAKsBV,EAAMU,EAAK,GAAKV,EAAMU,EAAK,GAAK,GAAhEX,EALU,EAKVA,SAAUD,EALA,EAKAA,UAAWyE,EALX,EAKWA,QAC1B,OACI,kBAACd,EAAA,EAAD,CAAOmD,YAAU,EAAC7E,MAAM,GACpB,kBAAC8E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMrC,GAAG,IAAItD,MAAO,CAAE4F,eAAgB,SAClC,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQzE,MAAM,UAAUmB,aAAW,SAChD,kBAAC,IAAD,CAAexC,MAAO,CAAEqB,MAAO,eAK/C,yBAAKrB,MAAO,CAAE+F,UAAW,GAAIxB,QAAS,KAChC1F,EAAMU,EAAK,IAAM,6BACf,oCAAUX,GACV,0CAAgB,IAAIQ,KAAKT,GAAWwE,sBACpC,wCAAc,IAAI/D,KAAKgE,GAASD,sBAChC,kBAAC,EAAD,CAAc1C,KAAO5B,EAAMU,EAAK,IAAhC,YAGCV,EAAMU,EAAK,IACR,qDAC0BA,EAD1B,Q,kBCJTyG,EA7BF,WAAO,IAECC,EAAQC,cAAlBC,SAFQ,EAImBxF,mBAAkB,WAATsF,EAAoB,EAAI,GAJpD,mBAIRG,EAJQ,KAIGC,EAJH,KAMTrF,EAAUC,cAQhB,OACI,kBAACyE,EAAA,EAAD,CAAQT,SAAS,SAAS5D,MAAM,WAC5B,kBAAC,IAAD,CACA0D,MAAOqB,EACPE,SAViB,SAACC,EAAOC,GAE7BxF,EAAQe,KADa,CAAC,GAAI,UACAyE,IAC1BH,EAAaG,IAQThE,aAAW,wBACXiE,QAAQ,aAEJ,kBAACC,EAAA,EAAD,CAAKxB,MAAM,cACX,kBAACwB,EAAA,EAAD,CAAKxB,MAAM,mB,SCVZyB,EAhBO,WAElB,IAAM/H,EAAWqD,aAAa,SAAAC,GAAK,OAAIA,EAAMtD,YACvCkC,EAAWC,cAIjB,OACI,kBAAC6F,EAAA,EAAD,CACI7B,MAAQnG,EACR0H,SALkB,SAAAC,GAAK,OAAIzF,ERiDZ,SAAClC,GAAD,MAAe,CAAEiD,KA5DtB,gBA4D2CjD,YQjDjBiI,CAAYN,EAAMO,OAAO/B,SAM7DgC,YAAY,uB,kBCYTC,EA1BA,SAAC,GAAyB,IAAvBpG,EAAsB,EAAtBA,KAAMqG,EAAgB,EAAhBA,WACd/F,EAAc,kBAAM+F,GAAW,IAErC,OACI,kBAAC,IAAD,CACIC,WAAW,EACXC,SAAS,KACTvG,KAAMA,EACNY,QAASN,EACTO,kBAAgB,0BAEpB,kBAAC2F,EAAA,EAAD,CAAa7H,GAAG,0BAAhB,mBACA,kBAACoC,EAAA,EAAD,KACE,kBAAC0F,EAAA,EAAD,sCAIF,kBAACzF,EAAA,EAAD,KACE,kBAACT,EAAA,EAAD,CAAQC,QAASF,EAAaG,MAAM,WAApC,SCtBJiG,EAAY,SAACC,EAAKC,GAAN,OAAeC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,IAASA,GAwC7DK,EAtCO,WAEpB,IAgBMC,EAhBsB,SAAtBC,IAAsF,IAA/DC,EAA8D,uDAAxCT,EAAU,GAAI,IAAKO,EAAqB,uDAAP,GAElF,OAAIA,EAAYG,SAAWD,EAA4BF,GAEvDA,EAAY9F,KAAsB,KAAhB0F,KAAKE,UACvBE,EAAYI,MAAM,SAAC3I,EAAM4I,GAAP,OAAiBA,EAAO5I,GAAS,EAAI,KAQhDwI,EAAoBC,EAP3BF,EAAcA,EAAYM,QAAQ,SAACC,EAAGpF,EAAGqF,GACvC,OAAU,IAANrF,KACEoF,EAAIC,EAAIrF,EAAI,GAAM,OACnBA,IAAOqF,EAAIL,OAAS,GAAO,KAAOI,EAAK,SAO5BN,GAEdQ,EAAYT,EAAY/E,KAAI,SAACyF,EAAIvF,GACrC,IAAIwF,EAGJ,OAF+BA,EAA3BxF,EAAI6E,EAAYG,OAAQ,EAAgBH,EAAY7E,EAAI,GAAKuF,EAAM,GAAMV,EAAY7E,EAAI,GAAKuF,EAAM,GACvFC,EAAY,GACtBD,EAAKjB,EAAU,GAAIkB,MAGtBC,EAAa,IAAIrJ,MAAO,IAAIA,MAAQsJ,gBAAkBC,UAQ5D,OANcd,EAAY/E,KAAK,SAACyF,EAAIvF,GAAL,MAAY,CACzCpE,SAAS,QAAD,OAAUoE,EAAI,GACtBrE,UAAW8J,EAAiB,IAALF,EACvBnF,QAASqF,EAA2B,IAAfH,EAAUtF,QCoFpB4F,EA5FH,WAAO,IAAD,EAEUjI,mBAAS,CAAEpB,GAAI,KAAMJ,KAAM,OAFrC,mBAETJ,EAFS,KAEFC,EAFE,OAG4B2B,oBAAS,GAHrC,mBAGTkI,EAHS,KAGOC,EAHP,OAKuB7G,aAAY,SAAAC,GAAK,OAAIA,KAApDvD,EALQ,EAKRA,UAAWE,EALH,EAKGA,MAAOD,EALV,EAKUA,SACpBkC,EAAWC,cA+BjB,OACE,yBAAKhB,UAAU,OACb,kBAAC,IAAD,CAAOkG,KAAM,CAAC,IAAK,UAAW8C,OAAK,GAEjC,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAAOhK,MAAOA,EAAOJ,UAAYA,EAAYK,SAAWA,IAExD,yBAAKgB,MAAO,CAACgJ,cAAe,MACxBrK,GAAa,kBAACwC,EAAA,EAAD,CAAQsF,QAAQ,YAAYpF,MAAM,UAAUD,QAtCxC,WACzBN,EX4B6B,CAAEe,KA7Df,cA6DkClD,UAAWS,KAAKC,UWS7C,SACdV,GAAa,kBAACwC,EAAA,EAAD,CAAQsF,QAAQ,YAAYpF,MAAM,YAAYD,QAnC1C,WACxB,GAAKxC,EAAL,CAKA,IAAM6B,EAAO,CACX7B,WACAD,YACAyE,QAAShE,KAAKC,OAGhB4J,OAAOC,cAAcnK,EAAMQ,IAE3BP,EAAS,IAET8B,EXWqC,CAAEe,KA9DxB,aA8D0CsH,QWXtC1I,SAdjBqI,GAAkB,KAiCA,SAGhB,kBAAC,EAAD,OAGF,kBAAC,EAAD,CAAQlI,KAAMiI,EAAgB5B,WAAY6B,IAE1C,kBAAC,IAAD,CAAO7C,KAAK,IAAI8C,OAAK,GACnB,yBACE/I,MAAO,CACLoJ,QAAS,OACTC,cAAe,SACfC,WAAW,WACXC,eAAgB,WAChBhF,QAAS,KAIX,kBAAC,EAAD,MAEA,kBAACpD,EAAA,EAAD,CACEnB,MAAO,CAAE+F,UAAW,IACpBU,QAAQ,WACRrF,QAvCoB,WAC5B,IAAMoI,EAAW5B,IACjB9G,EXDoB,SAACjC,GAAD,MAAY,CAAEgD,KA3DpB,YA2DqChD,SWC1C4K,CAASD,MAkCZ,cAWJ,kBAAC,IAAD,CAAOvD,KAAK,SAAS8C,OAAK,GACxB,kBAACW,EAAD,CAAO7K,MAAOA,KAIhB,kBAAC,IAAD,CAAOoH,KAAK,cACV,kBAAC,EAAD,S,QC3GF0D,EAAeV,OAAOU,aA6BbC,EARDC,aZbC,WAAmC,IAAlC3H,EAAiC,uDAAzBxD,EAAcoL,EAAW,uCAC7C,OAAQA,EAAOjI,MAEX,IAfU,YAgBN,OAAO,2BACAK,GADP,IAEIrD,MAAOiL,EAAOjL,QAGtB,IApBc,gBAqBV,OAAO,2BACAqD,GADP,IAEItD,SAAUkL,EAAOlL,WAIzB,IA1BY,cA2BR,OAAO,2BACAsD,GADP,IAEIvD,UAAWmL,EAAOnL,YAI1B,IAhCW,aAiCP,OAAO,2BACAuD,GADP,IAEIvD,UAAW,KACXC,SAAU,GACVC,MAAM,GAAD,mBAAOqD,EAAMrD,OAAb,CAAoBiL,EAAOX,YAIxC,IAxCY,cAyCR,OAAO,2BACAjH,GADP,IAEIvD,UAAW,KACXC,SAAU,GACVC,MAAOqD,EAAMrD,MAAMsJ,QAAQ,SAAAC,GAAC,OAAIA,EAAEzJ,YAAcmL,EAAOnL,eAI/D,QACI,OAAO,eAAKuD,MYtCD,WAErB,GAAiD,OAA7CyH,EAAaI,QAAQ,oBACrB,OAAOC,KAAKC,MAAMN,EAAaI,QAAQ,qBAQ3CG,GACAC,aAtB6B,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAC/B,OAAO,SAAClC,GAAD,OAAU,SAAC4B,GACd,IAAMO,EAASnC,EAAK4B,GAIpB,OAHAH,EAAaW,QAAQ,mBAAoBN,KAAKO,UAC1CH,MAEGC,QCJbG,IAASC,OACP,kBAAC,IAAD,CAAUb,MAAOA,GACf,kBAAC,IAAD,CAAQc,SAAU,eAChB,kBAAC,EAAD,QAKJC,SAASC,eAAe,W","file":"static/js/main.f784d205.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Clock\":\"Clock_Clock__3dHhC\"};","const SET_TASKS = 'SET-TASKS'\nconst SET_TASK_NAME = 'SET-TASK-NAME'\nconst START_TIMER = 'START_TIMER'\nconst STOP_TIMER = 'STOP_TIMER'\nconst DELETE_TASK = 'DELETE_TASK'\n\nconst initialState = {\n    startTime: null,\n    taskName: null,\n    tasks: []\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        \n        case SET_TASKS: {\n            return {\n                ...state,\n                tasks: action.tasks\n            }\n        }\n        case SET_TASK_NAME: {\n            return {\n                ...state,\n                taskName: action.taskName\n            }\n        }\n\n        case START_TIMER: {\n            return {\n                ...state,\n                startTime: action.startTime\n            }\n        }\n\n        case STOP_TIMER: {\n            return {\n                ...state,\n                startTime: null,\n                taskName: '',\n                tasks: [ ...state.tasks, action.newTask ]\n            }\n        }\n\n        case DELETE_TASK: {\n            return {\n                ...state,\n                startTime: null,\n                taskName: '',\n                tasks: state.tasks.filter( t => t.startTime !== action.startTime)\n            }\n        }\n\n        default: {\n            return { ...state }\n        }\n    }\n}\n\nexport const setTasks = (tasks) => ({ type: SET_TASKS, tasks })\n\nexport const setTaskName = (taskName) => ({ type: SET_TASK_NAME, taskName })\n\nexport const startTimer = () => ({ type: START_TIMER, startTime: Date.now() })\n\nexport const stopTimer = ( newTask ) => ({ type: STOP_TIMER, newTask })\n\nexport const deleteTask = ( task ) => ({ type: DELETE_TASK, startTime: task.startTime })","import React from 'react'\nimport style from './Clock.module.css'\n\nimport { createTimer, msToHMS } from '../../utils/timer-utils'\n\nconst Clock = ({ startTime, timer, setTimer }) => {\n    \n    createTimer(startTime, timer.id, setTimer)\n\n    const { hours, minutes, seconds } = msToHMS(timer.time)\n\n    return (\n        <div className={style.Clock}>\n            <span>{hours}:{minutes}:{seconds}</span>\n        </div>\n    );\n}\n\nexport default Clock;","\nexport const createTimer = (startTime = null, timerId,setTimer) => {\n    if (startTime && !timerId) {\n        const timerId = setInterval(() => {\n          const time = Date.now() - startTime\n          setTimer(prev => ({...prev, time}))\n        })\n        setTimer(prev => ({...prev, id: timerId}))\n    }\n}\n\nexport const msToHMS = (timer = 0) => {\n  let milliseconds = parseInt((timer%1000)/100)\n      , seconds = parseInt((timer/1000)%60)\n      , minutes = parseInt((timer/(1000*60))%60)\n      , hours = parseInt((timer/(1000*60*60))%24)\n\n  hours = (hours < 10) ? `0${hours}` : hours\n  minutes = (minutes < 10) ? `0${minutes}` : minutes\n  seconds = (seconds < 10) ? `0${seconds}` : seconds\n\n  return {hours, minutes, seconds, milliseconds}\n}\n","import React, { useState } from 'react';\n\nimport { useDispatch } from 'react-redux'\nimport { deleteTask } from '../../redux/app-reducer'\n\nimport { Button, Dialog, Slide, DialogActions, DialogContent } from '@material-ui/core';\n\nimport { useHistory } from \"react-router-dom\"\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst DeleteButton = ({ task, children }) => {\n    const [open, setOpen] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const history = useHistory()\n\n    const handleDeleteButton = () => {\n        dispatch(deleteTask(task))\n        setOpen(false)\n        history.push('/')\n    }\n\n    const handleClose = () => setOpen(false)\n\n    const handleOpenDialog = () => setOpen(true)\n\n    return (\n        <>\n            <Button onClick={handleOpenDialog} color=\"secondary\">{ children }</Button>\n\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogContent id=\"alert-dialog-slide-title\">Do you really want to delete <b>{ task.taskName }</b>?</DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleDeleteButton} color=\"secondary\">\n                        DELETE\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nexport default DeleteButton;\n","import React from 'react';\n\n// material-ui\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\n// react-router\nimport { Link } from 'react-router-dom'\n\n// redux\nimport { useSelector } from 'react-redux'\n\n// components\nimport DeleteButton from '../DeleteButton/DeleteButton'\n\nfunction msToHMS( ms ) {\n\n    var seconds = parseInt(ms / 1000);\n    var hours = parseInt( seconds / 3600 ); \n    seconds = seconds % 3600; \n    var minutes = parseInt( seconds / 60 );\n    seconds = seconds % 60;\n    return((hours < 10 ? `0${hours}` : hours)+\":\"+(minutes < 10 ? `0${minutes}` : minutes)+\":\"+(seconds < 10 ? `0${seconds}` : seconds));\n}\n\nconst Logs = () => {\n\n    const tasks = useSelector( state => state.tasks )\n\n    return (\n        <TableContainer style={{ width: '100%' }} component={Paper}>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>№</TableCell>\n                        <TableCell align=\"right\">Task</TableCell>\n                        <TableCell align=\"right\">Time start</TableCell>\n                        <TableCell align=\"right\">Time end</TableCell>\n                        <TableCell align=\"right\">Time spent</TableCell>\n                        <TableCell align=\"right\">Info</TableCell>\n                        <TableCell align=\"right\">Delete</TableCell>\n                    </TableRow>\n                </TableHead>\n\n                <TableBody>\n                    {tasks && tasks.map((row, i) => (\n                        <TableRow key={row.startTime}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {i + 1}\n                            </TableCell>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.taskName}\n                            </TableCell>\n                            <TableCell align=\"right\">{ new Date(row.startTime).toLocaleTimeString() }</TableCell>\n                            <TableCell align=\"right\">{ new Date(row.endTime).toLocaleTimeString() }</TableCell>\n                            <TableCell align=\"right\">{ msToHMS(row.endTime - row.startTime) }</TableCell>\n                            <TableCell align=\"right\">\n                            <Link to={`/tasks/${i + 1}`}><Button color=\"primary\">INFO</Button></Link>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <DeleteButton task={row}>DELETE</DeleteButton>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nexport default Logs\n","import * as React from 'react';\nimport { \n    BarChart, \n    Bar, \n    XAxis, \n    YAxis, \n    ResponsiveContainer, \n    LabelList, \n    Label, \n    CartesianGrid \n} from 'recharts';\n\nexport const generateData = (data) => {\n    const res = [...new Array(24).keys()].map(() => 0);\n    \n    data.forEach( ({startTime, endTime}) => {\n        \n        const startHour = (new Date (startTime)).getHours()\n        const startMinutes = (new Date (startTime)).getMinutes()\n\n        const endHour = (new Date (endTime)).getHours()\n        const endMinutes = (new Date (endTime)).getMinutes()\n\n        if (startHour === endHour) {\n            res[startHour] += (endMinutes - startMinutes)\n        }\n\n        if (endHour > startHour) {\n            let currentHour = startHour\n            res[currentHour] += (60 - startMinutes)\n            currentHour += 1\n            while (currentHour !== endHour) {\n                res[currentHour] = 60\n                currentHour += 1\n            }\n            res[currentHour] += endMinutes\n        }\n    })\n\n    return res.map((minutes, hour) => ({hour: hour, minutes: minutes}))  \n}\n\nconst TasksChart = ({ tasks }) => {\n    const data = generateData(tasks)\n    \n    return (\n        <div style={{width: '100%', height: '55vh', padding: 8}}>\n            <ResponsiveContainer>\n                <BarChart margin={{ top: 20, right: 30, left: 0, bottom: 0 }} data={data}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"hour\">\n                        <Label value=\"Hours\" offset={0} position=\"insideBottom\" />\n                    </XAxis>\n                    <YAxis label={{ value: 'Minutes in hours', angle: -90, position: 'insideLeft' }}/> \n                    \n                    <Bar dataKey=\"minutes\" barSize={10} fill=\"#8884d8\">\n                        <LabelList dataKey=\"minutes\" position=\"top\" />\n                    </Bar> \n                </BarChart>\n             </ResponsiveContainer>  \n        </div>\n        \n        \n    )\n}\n\nexport default TasksChart;","import React from 'react'\n\nimport { useRouteMatch, Link } from 'react-router-dom'\n\nimport { useSelector } from 'react-redux'\n\nimport DeleteButton from '../DeleteButton/DeleteButton'\n\nimport { \n    Paper,\n    Toolbar, \n    IconButton,\n    AppBar \n} from '@material-ui/core';\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst Info = () => {\n\n    const tasks = useSelector( state => state.tasks)\n\n    let { params: { id } } = useRouteMatch()\n    let {taskName, startTime, endTime} = tasks[id - 1] ? tasks[id - 1] : {}\n    return (\n        <Paper fullScreen open={true}>\n            <AppBar>\n                <Toolbar>\n                    <Link to='/' style={{ textDecoration: 'none' }}>\n                        <IconButton edge=\"start\" color=\"default\" aria-label=\"close\">\n                            <ArrowBackIcon style={{ color: 'white' }}/>\n                        </IconButton>\n                    </Link>\n                </Toolbar> \n            </AppBar>\n            <div style={{ marginTop: 48, padding: 16 }}>\n                { tasks[id - 1] && <div>\n                    <p>Name: {taskName}</p>\n                    <p>Start Time: {new Date(startTime).toLocaleTimeString()}</p>\n                    <p>End Time: {new Date(endTime).toLocaleTimeString()}</p>\n                    <DeleteButton task={ tasks[id - 1] } >DELETE</DeleteButton>\n                </div>}\n                {\n                    !tasks[id - 1] && (\n                        <div>\n                            Error! No such task #{id}!\n                        </div>\n                    )\n                }\n            </div>\n        </Paper>\n    )\n}\n\nexport default Info\n","import React, { useState } from 'react'\n\n// materual-ui\nimport MaterialUITabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport AppBar from '@material-ui/core/AppBar'\n\n// react-router\nimport { useHistory, useLocation } from \"react-router-dom\"\n\nconst Tabs = () => {\n\n    const {pathname: path} = useLocation()\n\n    const [tabsValue, setTabsValue] = useState(path === '/chart' ? 1 : 0)\n\n    const history = useHistory()\n\n    const handleTabsChange = (event, newValue) => {\n        const routerValues = ['', '/chart']\n        history.push(routerValues[newValue])\n        setTabsValue(newValue)\n    }\n\n    return (\n        <AppBar position=\"static\" color='primary'>\n            <MaterialUITabs\n            value={tabsValue}\n            onChange={handleTabsChange}\n            aria-label=\"disabled tabs example\"\n            variant=\"fullWidth\"\n            >\n                <Tab label=\"TASKS LOG\" />\n                <Tab label=\"TASKS CHART\" />\n            </MaterialUITabs>\n      </AppBar>\n    );\n}\n\nexport default Tabs;\n","import React from 'react';\n\nimport { Input } from '@material-ui/core';\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setTaskName } from '../../redux/app-reducer'\n\nconst TaskNameInput = () => {\n\n    const taskName = useSelector( state => state.taskName)\n    const dispatch = useDispatch()\n\n    const handleInputChange = event => dispatch(setTaskName(event.target.value))\n\n    return (\n        <Input \n            value={ taskName } \n            onChange={ handleInputChange } \n            placeholder=\"Name of your task\" \n        />\n    );\n}\n\nexport default TaskNameInput;\n","import React from 'react';\n\nimport { Dialog as MaterialUIDialog, DialogTitle, DialogContent, DialogContentText, Button, DialogActions } from '@material-ui/core'\n\nconst Dialog = ({ open, setVisible}) => {\n    const handleClose = () => setVisible(false)\n\n    return (\n        <MaterialUIDialog\n            fullWidth={true}\n            maxWidth=\"xs\"\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"max-width-dialog-title\"\n        >\n        <DialogTitle id=\"max-width-dialog-title\">Input is empty!</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter the name of task first\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </MaterialUIDialog>\n    );\n}\n\nexport default Dialog;\n","const getRandom = (min, max) => (Math.floor(Math.random() * (max - min) ) + min)\n\nconst generateTasks = () => {\n\n  const generateStartPoints = (numberOfStartPoints = getRandom(10, 15), startPoints = []) => {\n\n    if (startPoints.length === numberOfStartPoints) return startPoints\n    \n    startPoints.push( Math.random() * 1440 )\n    startPoints.sort( (prev, next) => (next > prev) ? -1 : 1)\n    startPoints = startPoints.filter( (t, i, arr) => {\n      if (i === 0) return true\n      if ( (t - arr[i - 1]) < 10) return false\n      if ( i === (arr.length - 1) && (1440 - t) < 10) return false\n      return true\n    })\n    \n    return generateStartPoints(numberOfStartPoints, startPoints);\n  }\n\n  const startPoints = generateStartPoints()\n\n  const endPoints = startPoints.map((sp, i) => {\n    let maxLength;\n    if (i < startPoints.length -1) maxLength = (startPoints[i + 1] - sp) < 90 ? (startPoints[i + 1] - sp) : 90\n    else maxLength = maxLength = 90\n    return sp + getRandom(10, maxLength)\n  })\n\n  const todayDate = (new Date( (new Date()).toDateString() )).getTime()\n\n  const tasks = startPoints.map( (sp, i) => ({\n    taskName: `Task ${i + 1}`,\n    startTime: todayDate + sp * 60000,\n    endTime: todayDate + endPoints[i] * 60000\n  }))\n\n  return tasks\n}\n\nexport default generateTasks;","import React, { useState } from 'react';\nimport './App.css';\n\n// redux\nimport { useSelector, useDispatch } from 'react-redux'\nimport { startTimer, stopTimer, setTasks } from './redux/app-reducer'\n\n// material-ui\nimport Button from '@material-ui/core/Button';\n\n// react-router\nimport { Route } from \"react-router-dom\"\n\n// components\nimport Clock from './components/Clock/Clock'\nimport Logs from './components/Logs/Logs';\nimport Chart from './components/Chart/Chart';\nimport Info from './components/Info/Info';\nimport Tabs from './components/Tabs/Tabs';\nimport TaskNameInput from './components/TaskNameInput/TaskNameInput';\nimport Dialog from './components/Dialog/Dialog';\n\n// utils\nimport generateTasks from './utils/generate-tasks'\n\n\nconst App = () => {\n  \n  const [timer, setTimer] = useState({ id: null, time: null })\n  const [alertIsVisible, setAlertIsVisible] = useState(false)\n\n  const { startTime, tasks, taskName } = useSelector(state => state)\n  const dispatch = useDispatch()\n\n  const onStartButtonPress = () => {\n    dispatch(startTimer())\n  }\n\n  const onStopButtonPress = () => {\n    if (!taskName) {\n      setAlertIsVisible(true)\n      return;\n    }\n\n    const task = {\n      taskName,\n      startTime,\n      endTime: Date.now()\n    }\n\n    window.clearInterval(timer.id)\n\n    setTimer({})\n\n    dispatch(stopTimer(task))\n  \n  }\n\n  const onGenerateButtonPress = () => {\n    const newTasks = generateTasks()\n    dispatch(setTasks(newTasks))\n  }\n\n  return (\n    <div className=\"App\">\n      <Route path={['/', '/chart']} exact>\n        \n        <TaskNameInput />\n\n        <Clock timer={timer} startTime={ startTime } setTimer={ setTimer }/>\n\n        <div style={{paddingBottom: 12}}>\n          {!startTime && <Button variant=\"contained\" color=\"primary\" onClick={onStartButtonPress}>START</Button>}\n          {startTime && <Button variant=\"contained\" color=\"secondary\" onClick={onStopButtonPress}>STOP</Button>}\n        </div>\n        \n        <Tabs />\n      </Route>\n      \n      <Dialog open={alertIsVisible} setVisible={setAlertIsVisible}/>\n      \n      <Route path='/' exact>\n        <div \n          style={{\n            display: 'flex', \n            flexDirection: 'column', \n            alignItems:'flex-end',  \n            justifyContent: 'flex-end', \n            padding: 16\n          }}\n        >\n\n          <Logs />\n \n          <Button\n            style={{ marginTop: 16 }} \n            variant=\"outlined\"\n            onClick={onGenerateButtonPress}\n          >\n            GENERATE\n          </Button>\n\n        </div>\n      </Route>\n\n      <Route path='/chart' exact>\n        <Chart tasks={tasks} />\n      </Route>\n      \n\n      <Route path=\"/tasks/:id\">\n        <Info />\n      </Route>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux'\n\nimport reducer from './app-reducer'\n\nconst localStorage = window.localStorage\n\nconst localStorageMiddleware = ({getState}) => {\n  return (next) => (action) => {\n      const result = next(action);\n      localStorage.setItem('applicationState', JSON.stringify(\n          getState()\n      ));\n      return result;\n  };\n};\n\nconst reHydrateStore = () => {\n\n  if (localStorage.getItem('applicationState') !== null) {\n      return JSON.parse(localStorage.getItem('applicationState'))\n\n  }\n}\n\n\nconst store = createStore(\n  reducer,\n  reHydrateStore(),\n  applyMiddleware(\n    localStorageMiddleware\n  )\n)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename={'/task-timer'}>\n      <App />\n    </Router>\n  </Provider>\n    \n    ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}